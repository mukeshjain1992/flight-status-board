{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshjain/Desktop/flight-status-board/src/components/FlightTable.js\",\n  _s = $RefreshSig$();\n// FlightTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FlightRow from './FlightRow';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from '@mui/material';\nimport styles from './FlightTable.module.css';\n\n/**\n * Fetches flight data periodically and displays it in a table with detailed flight information.\n *\n * @description This component fetches the flight data from the provided API endpoint\n *              and displays it in a table format. The data is fetched every 5 seconds\n *              and the component is automatically updated with the new data.\n *\n * @return {JSX.Element} The FlightTable component containing flight details in a table format.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightTable = () => {\n  _s();\n  const [flights, setFlights] = useState([]); // Stores the list of flights\n  const [error, setError] = useState(null); // Stores any error message that occurs during data fetching\n\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        // Fetch the flight data from the API endpoint\n        const response = await axios.get('https://flight-status-mock.core.travelopia.cloud/flights');\n        // Update the state with the new data\n        setFlights(response.data);\n      } catch (error) {\n        // Set the error message if any error occurs during data fetching\n        setError('Error fetching flight data');\n      }\n    };\n\n    // Fetch the data initially\n    fetchFlights();\n    // Set an interval to fetch the data every 5 seconds\n    const interval = setInterval(fetchFlights, 5000);\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(interval);\n  }, []);\n\n  // If there is any error, display the error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the table with the flight details\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: styles.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Flight Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Airline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Departure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: flights.map(flight => /*#__PURE__*/_jsxDEV(FlightRow, {\n          flight: flight\n        }, flight.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightTable, \"ZAybFA5rfhjqV5X0n+VocBOgtgg=\");\n_c = FlightTable;\nexport default FlightTable;\nvar _c;\n$RefreshReg$(_c, \"FlightTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","FlightRow","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","styles","jsxDEV","_jsxDEV","FlightTable","_s","flights","setFlights","error","setError","fetchFlights","response","get","data","interval","setInterval","clearInterval","color","children","fileName","_jsxFileName","lineNumber","columnNumber","component","className","tableContainer","map","flight","id","_c","$RefreshReg$"],"sources":["/Users/mukeshjain/Desktop/flight-status-board/src/components/FlightTable.js"],"sourcesContent":["// FlightTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FlightRow from './FlightRow';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from '@mui/material';\nimport styles from './FlightTable.module.css';\n\n/**\n * Fetches flight data periodically and displays it in a table with detailed flight information.\n *\n * @description This component fetches the flight data from the provided API endpoint\n *              and displays it in a table format. The data is fetched every 5 seconds\n *              and the component is automatically updated with the new data.\n *\n * @return {JSX.Element} The FlightTable component containing flight details in a table format.\n */\nconst FlightTable = () => {\n  const [flights, setFlights] = useState([]); // Stores the list of flights\n  const [error, setError] = useState(null); // Stores any error message that occurs during data fetching\n\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        // Fetch the flight data from the API endpoint\n        const response = await axios.get('https://flight-status-mock.core.travelopia.cloud/flights');\n        // Update the state with the new data\n        setFlights(response.data);\n      } catch (error) {\n        // Set the error message if any error occurs during data fetching\n        setError('Error fetching flight data');\n      }\n    };\n\n    // Fetch the data initially\n    fetchFlights();\n    // Set an interval to fetch the data every 5 seconds\n    const interval = setInterval(fetchFlights, 5000);\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(interval);\n  }, []);\n\n  // If there is any error, display the error message\n  if (error) {\n    return <Typography color=\"error\">{error}</Typography>;\n  }\n\n  // Render the table with the flight details\n  return (\n    <TableContainer component={Paper} className={styles.tableContainer}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Flight Number</TableCell>\n            <TableCell>Airline</TableCell>\n            <TableCell>Origin</TableCell>\n            <TableCell>Destination</TableCell>\n            <TableCell>Departure Time</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {flights.map((flight) => (\n            <FlightRow key={flight.id} flight={flight} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default FlightTable;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}