{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshjain/Desktop/flight-status-board/src/components/FlightDetail.js\",\n  _s = $RefreshSig$();\n// This component fetches flight details from the flight-status-mock API based on the flight ID in the URL\n// and displays the flight details in a user-friendly format.\n//\n// It uses the useParams hook from react-router-dom to extract the flight ID from the URL.\n// It uses the useState hook to manage the state of flight details and error messages.\n// It uses the useEffect hook to fetch the flight details when the component mounts and when the flight ID changes.\n//\n// The fetchFlight function makes an HTTP GET request to the flight-status-mock API endpoint with the flight ID.\n// If the request is successful, it updates the flight state with the response data.\n// If there is an error, it updates the error state with an error message.\n//\n// The component renders a loading message if the flight details are not yet available.\n// It renders an error message if there is an error fetching the flight details.\n// It renders the flight details if they are available.\n//\n// The flight details include flight number, airline, origin, destination, departure time, and status.\n// The component displays these details in a formatted way.\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\n/**\n * Renders the flight detail component.\n *\n * @return {JSX.Element} The flight detail component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFlight = async () => {\n      try {\n        const response = await axios.get(`https://flight-status-mock.core.travelopia.cloud/flights/${id}`);\n        setFlight(response.data);\n      } catch (error) {\n        setError('Error fetching flight details');\n      }\n    };\n    fetchFlight();\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (!flight) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Flight Details for \", flight.flightNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Airline: \", flight.airline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Origin: \", flight.origin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Destination: \", flight.destination]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Departure Time: \", flight.departureTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", flight.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetail, \"WqjKhjPryTBCvvmf1IhyonwH8j8=\", false, function () {\n  return [useParams];\n});\n_c = FlightDetail;\nexport default FlightDetail;\nvar _c;\n$RefreshReg$(_c, \"FlightDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","FlightDetail","_s","id","flight","setFlight","error","setError","fetchFlight","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","flightNumber","airline","origin","destination","departureTime","status","_c","$RefreshReg$"],"sources":["/Users/mukeshjain/Desktop/flight-status-board/src/components/FlightDetail.js"],"sourcesContent":["// This component fetches flight details from the flight-status-mock API based on the flight ID in the URL\n// and displays the flight details in a user-friendly format.\n//\n// It uses the useParams hook from react-router-dom to extract the flight ID from the URL.\n// It uses the useState hook to manage the state of flight details and error messages.\n// It uses the useEffect hook to fetch the flight details when the component mounts and when the flight ID changes.\n//\n// The fetchFlight function makes an HTTP GET request to the flight-status-mock API endpoint with the flight ID.\n// If the request is successful, it updates the flight state with the response data.\n// If there is an error, it updates the error state with an error message.\n//\n// The component renders a loading message if the flight details are not yet available.\n// It renders an error message if there is an error fetching the flight details.\n// It renders the flight details if they are available.\n//\n// The flight details include flight number, airline, origin, destination, departure time, and status.\n// The component displays these details in a formatted way.\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\n/**\n * Renders the flight detail component.\n *\n * @return {JSX.Element} The flight detail component.\n */\nconst FlightDetail = () => {\n  const { id } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFlight = async () => {\n      try {\n        const response = await axios.get(`https://flight-status-mock.core.travelopia.cloud/flights/${id}`);\n        setFlight(response.data);\n      } catch (error) {\n        setError('Error fetching flight details');\n      }\n    };\n\n    fetchFlight();\n  }, [id]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (!flight) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Flight Details for {flight.flightNumber}</h2>\n      <p>Airline: {flight.airline}</p>\n      <p>Origin: {flight.origin}</p>\n      <p>Destination: {flight.destination}</p>\n      <p>Departure Time: {flight.departureTime}</p>\n      <p>Status: {flight.status}</p>\n      {/* Add more details as necessary */}\n    </div>\n  );\n};\n\nexport default FlightDetail;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4DAA4DP,EAAE,EAAE,CAAC;QAClGE,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,QAAQ,CAAC,+BAA+B,CAAC;MAC3C;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,IAAIG,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAY,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,IAAI,CAACZ,MAAM,EAAE;IACX,oBAAOJ,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAI,qBAAmB,EAACR,MAAM,CAACa,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDhB,OAAA;MAAAY,QAAA,GAAG,WAAS,EAACR,MAAM,CAACc,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChB,OAAA;MAAAY,QAAA,GAAG,UAAQ,EAACR,MAAM,CAACe,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BhB,OAAA;MAAAY,QAAA,GAAG,eAAa,EAACR,MAAM,CAACgB,WAAW;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxChB,OAAA;MAAAY,QAAA,GAAG,kBAAgB,EAACR,MAAM,CAACiB,aAAa;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ChB,OAAA;MAAAY,QAAA,GAAG,UAAQ,EAACR,MAAM,CAACkB,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEV,CAAC;AAACd,EAAA,CArCID,YAAY;EAAA,QACDH,SAAS;AAAA;AAAAyB,EAAA,GADpBtB,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}